<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.pedigree</groupId>
    <artifactId>pedigree-editor</artifactId>
    <version>1.1.0-SNAPSHOT</version>
    <name>Pedigree Chart Editor</name>
    <description>Data layer and core scaffolding for the Pedigree Chart Editor (Phase 1)</description>

    <properties>
        <maven.compiler.source>25</maven.compiler.source>
        <maven.compiler.target>25</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <javafx.version>24.0.1</javafx.version>
        <jackson.version>2.18.2</jackson.version>
    </properties>

    <dependencies>
        <!-- JSON serialization -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <!-- JavaFX -->
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-graphics</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-base</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <!-- Required for SwingFXUtils used by ImageExporter -->
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-swing</artifactId>
            <version>${javafx.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.13.0</version>
                <configuration>
                    <release>25</release>
                </configuration>
            </plugin>

            <!-- Optional: facilitate running JavaFX app in future phases -->
            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>0.0.8</version>
                <configuration>
                    <launcher>app</launcher>
                    <mainClass>com.pedigree.app.MainApplication</mainClass>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>mac</id>
            <activation>
                <os>
                    <family>mac</family>
                </os>
            </activation>
            <properties>
                <!-- Fallback to ensure non-zero major version even if regex-property doesn't run -->
                <app.version.mac.effective>1.0.0</app.version.mac.effective>
            </properties>
            <build>
                <plugins>
                    <!-- Using jpackage to create the runtime image; no separate jlink step needed for non-modular app. -->

                    <!-- Collect runtime dependencies and app JAR into jpackage input -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>3.6.1</version>
                        <executions>
                            <execution>
                                <id>copy-dependencies-for-jpackage</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-dependencies</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/jpackage/input</outputDirectory>
                                    <includeScope>runtime</includeScope>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-main-jar-for-jpackage</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>${project.groupId}</groupId>
                                            <artifactId>${project.artifactId}</artifactId>
                                            <version>${project.version}</version>
                                            <outputDirectory>${project.build.directory}/jpackage/input</outputDirectory>
                                            <destFileName>${project.build.finalName}.jar</destFileName>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Parse project version into major/minor/incremental for a valid macOS app version -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <version>3.5.0</version>
                        <executions>
                            <execution>
                                <id>parse-version</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>parse-version</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>fix-mac-major-version</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>regex-property</goal>
                                </goals>
                                <configuration>
                                    <name>app.version.mac.effective</name>
                                    <value>${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}</value>
                                    <regex>^0\.</regex>
                                    <replacement>1.</replacement>
                                    <failIfNoMatch>false</failIfNoMatch>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>



                    <!-- Ensure required directories exist before invoking jpackage -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>prepare-dist-dir</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <mkdir dir="${project.build.directory}/dist"/>
                                        <mkdir dir="${project.build.directory}/jpackage/input"/>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Build DMG by invoking the JDK's jpackage directly -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.3.0</version>
                        <executions>
                            <execution>
                                <id>package-macos-dmg</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${java.home}/bin/jpackage</executable>
                                    <arguments>
                                        <argument>--type</argument>
                                        <argument>dmg</argument>
                                        <argument>--name</argument>
                                        <argument>Pedigree Chart Editor</argument>
                                        <argument>--app-version</argument>
                                        <argument>${app.version.mac.effective}</argument>
                                        <argument>--vendor</argument>
                                        <argument>Pedigree</argument>

                                        <argument>--dest</argument>
                                        <argument>${project.build.directory}/dist</argument>

                                        <argument>--input</argument>
                                        <argument>${project.build.directory}/jpackage/input</argument>
                                        <argument>--main-jar</argument>
                                        <argument>${project.build.finalName}.jar</argument>
                                        <argument>--main-class</argument>
                                        <argument>com.pedigree.app.MainApplication</argument>

                                        <!-- Build a minimal runtime using JavaFX modules present in input -->
                                        <argument>--module-path</argument>
                                        <argument>${project.build.directory}/jpackage/input</argument>
                                        <argument>--add-modules</argument>
                                        <argument>javafx.controls,javafx.swing</argument>

                                        <!-- macOS specific identifier -->
                                        <argument>--mac-package-identifier</argument>
                                        <argument>com.pedigree.editor</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>windows</id>
            <activation>
                <os>
                    <family>windows</family>
                </os>
            </activation>
            <properties>
                <app.version.win.effective>1.0.0</app.version.win.effective>
            </properties>
            <build>
                <plugins>
                    <!-- Собираем зависимости и основной JAR для jpackage -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>3.6.1</version>
                        <executions>
                            <execution>
                                <id>copy-dependencies-for-jpackage-win</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-dependencies</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/jpackage/input</outputDirectory>
                                    <includeScope>runtime</includeScope>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-main-jar-for-jpackage-win</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>${project.groupId}</groupId>
                                            <artifactId>${project.artifactId}</artifactId>
                                            <version>${project.version}</version>
                                            <outputDirectory>${project.build.directory}/jpackage/input</outputDirectory>
                                            <destFileName>${project.build.finalName}.jar</destFileName>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Разбираем версию и убираем квалификаторы для Windows MSI -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <version>3.5.0</version>
                        <executions>
                            <execution>
                                <id>parse-version-win</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>parse-version</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>set-windows-effective-version</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>regex-property</goal>
                                </goals>
                                <configuration>
                                    <!-- Формируем X.Y.Z для MSI, без -SNAPSHOT -->
                                    <name>app.version.win.effective</name>
                                    <value>${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}</value>
                                    <!-- На случай, если major==0, поднимем до 1 -->
                                    <regex>^0\.</regex>
                                    <replacement>1.</replacement>
                                    <failIfNoMatch>false</failIfNoMatch>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Готовим каталоги -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>prepare-dist-dir-win</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <mkdir dir="${project.build.directory}/dist"/>
                                        <mkdir dir="${project.build.directory}/jpackage/input"/>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Вызываем jpackage для сборки MSI -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.3.0</version>
                        <executions>
                            <execution>
                                <id>package-windows-msi</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${java.home}/bin/jpackage</executable>
                                    <arguments>
                                        <argument>--type</argument>
                                        <argument>msi</argument>
                                        <argument>--name</argument>
                                        <argument>Pedigree Chart Editor</argument>
                                        <argument>--app-version</argument>
                                        <argument>${app.version.win.effective}</argument>
                                        <argument>--vendor</argument>
                                        <argument>Pedigree</argument>

                                        <argument>--dest</argument>
                                        <argument>${project.build.directory}/dist</argument>

                                        <argument>--input</argument>
                                        <argument>${project.build.directory}/jpackage/input</argument>
                                        <argument>--main-jar</argument>
                                        <argument>${project.build.finalName}.jar</argument>
                                        <argument>--main-class</argument>
                                        <argument>com.pedigree.app.MainApplication</argument>

                                        <!-- Минимальный рантайм на базе JavaFX -->
                                        <argument>--module-path</argument>
                                        <argument>${project.build.directory}/jpackage/input</argument>
                                        <argument>--add-modules</argument>
                                        <argument>javafx.controls,javafx.swing</argument>

                                        <!-- Опции Windows -->
                                        <argument>--win-menu</argument>
                                        <argument>--win-menu-group</argument>
                                        <argument>Pedigree</argument>
                                        <argument>--win-dir-chooser</argument>
                                        <argument>--win-shortcut</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>


