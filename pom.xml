<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.pedigree</groupId>
    <artifactId>family-tree-editor</artifactId>
    <version>1.2.14-SNAPSHOT</version>
    <name>Family Tree Editor</name>
    <description>Data layer and core scaffolding for the Family Tree Editor (Phase 1)</description>

    <properties>
        <maven.compiler.source>25</maven.compiler.source>
        <maven.compiler.target>25</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <javafx.version>24.0.1</javafx.version>
        <jackson.version>2.18.2</jackson.version>
        <!-- Default for tooling; overridden by build-helper regex-property during validate phase -->
        <app.version.effective>1.2.14</app.version.effective>
    </properties>

    <dependencies>
        <!-- JSON serialization -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>${jackson.version}</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.13.0</version>
                <configuration>
                    <release>25</release>
                </configuration>
            </plugin>

            <!-- Optional: facilitate running JavaFX app in future phases -->
            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>0.0.8</version>
                <configuration>
                    <launcher>app</launcher>
                    <mainClass>com.pedigree.app.MainApplication</mainClass>
                </configuration>
            </plugin>

            <!-- Compute a unified effective app version (X.Y.Z, no qualifiers, non-zero major) for all platforms -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.5.0</version>
                <executions>
                    <execution>
                        <id>parse-version-global</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>parse-version</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>set-effective-app-version</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>regex-property</goal>
                        </goals>
                        <configuration>
                            <name>app.version.effective</name>
                            <value>${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}</value>
                            <regex>^0\.</regex>
                            <replacement>1.</replacement>
                            <failIfNoMatch>false</failIfNoMatch>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>mac-aarch64</id>
            <activation>
                <os>
                    <family>mac</family>
                    <arch>aarch64</arch>
                </os>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-controls</artifactId>
                    <version>${javafx.version}</version>
                    <classifier>mac-aarch64</classifier>
                </dependency>
                <dependency>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-graphics</artifactId>
                    <version>${javafx.version}</version>
                    <classifier>mac-aarch64</classifier>
                </dependency>
                <dependency>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-base</artifactId>
                    <version>${javafx.version}</version>
                    <classifier>mac-aarch64</classifier>
                </dependency>
                <dependency>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-swing</artifactId>
                    <version>${javafx.version}</version>
                    <classifier>mac-aarch64</classifier>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <!-- Using jpackage to create the runtime image; no separate jlink step needed for non-modular app. -->

                    <!-- Collect runtime dependencies and app JAR into jpackage input -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>3.6.1</version>
                        <executions>
                            <execution>
                                <id>copy-dependencies-for-jpackage</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-dependencies</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/jpackage/input</outputDirectory>
                                    <includeScope>runtime</includeScope>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-main-jar-for-jpackage</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>${project.groupId}</groupId>
                                            <artifactId>${project.artifactId}</artifactId>
                                            <version>${project.version}</version>
                                            <outputDirectory>${project.build.directory}/jpackage/input</outputDirectory>
                                            <destFileName>${project.build.finalName}.jar</destFileName>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>




                    <!-- Ensure required directories exist before invoking jpackage -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>prepare-dist-dir</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <mkdir dir="${project.build.directory}/dist"/>
                                        <mkdir dir="${project.build.directory}/jpackage/input"/>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Build DMG by invoking the JDK's jpackage directly -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>package-macos-dmg</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <exec executable="jpackage">
                                            <arg value="--type"/>
                                            <arg value="dmg"/>
                                            <arg value="--name"/>
                                            <arg value="Family Tree Editor"/>
                                            <arg value="--app-version"/>
                                            <arg value="${app.version.effective}"/>
                                            <arg value="--vendor"/>
                                            <arg value="FamilyTree"/>
                                            <arg value="--dest"/>
                                            <arg value="${project.build.directory}/dist"/>
                                            <arg value="--input"/>
                                            <arg value="${project.build.directory}/jpackage/input"/>
                                            <arg value="--main-jar"/>
                                            <arg value="${project.build.finalName}.jar"/>
                                            <arg value="--main-class"/>
                                            <arg value="com.pedigree.app.MainApplication"/>
                                            <arg value="--module-path"/>
                                            <arg value="${project.build.directory}/jpackage/input"/>
                                            <arg value="--add-modules"/>
                                            <arg value="javafx.controls,javafx.swing"/>
                                            <arg value="--mac-package-identifier"/>
                                            <arg value="com.familytree.editor"/>
                                        </exec>
                                        <!-- Rename DMG to include OS name -->
                                        <move file="${project.build.directory}/dist/Family Tree Editor-${app.version.effective}.dmg"
                                              tofile="${project.build.directory}/dist/family-tree-editor-${app.version.effective}-macos.dmg"
                                              failonerror="false"/>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>mac-x64</id>
            <activation>
                <os>
                    <family>mac</family>
                    <arch>x86_64</arch>
                </os>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-controls</artifactId>
                    <version>${javafx.version}</version>
                    <classifier>mac</classifier>
                </dependency>
                <dependency>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-graphics</artifactId>
                    <version>${javafx.version}</version>
                    <classifier>mac</classifier>
                </dependency>
                <dependency>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-base</artifactId>
                    <version>${javafx.version}</version>
                    <classifier>mac</classifier>
                </dependency>
                <dependency>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-swing</artifactId>
                    <version>${javafx.version}</version>
                    <classifier>mac</classifier>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <!-- Using jpackage to create the runtime image; no separate jlink step needed for non-modular app. -->

                    <!-- Collect runtime dependencies and app JAR into jpackage input -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>3.6.1</version>
                        <executions>
                            <execution>
                                <id>copy-dependencies-for-jpackage-mac-x64</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-dependencies</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/jpackage/input</outputDirectory>
                                    <includeScope>runtime</includeScope>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-main-jar-for-jpackage-mac-x64</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>${project.groupId}</groupId>
                                            <artifactId>${project.artifactId}</artifactId>
                                            <version>${project.version}</version>
                                            <outputDirectory>${project.build.directory}/jpackage/input</outputDirectory>
                                            <destFileName>${project.build.finalName}.jar</destFileName>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Ensure required directories exist before invoking jpackage -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>prepare-dist-dir-mac-x64</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <mkdir dir="${project.build.directory}/dist"/>
                                        <mkdir dir="${project.build.directory}/jpackage/input"/>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Build DMG by invoking the JDK's jpackage directly -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>package-macos-dmg-x64</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <exec executable="jpackage">
                                            <arg value="--type"/>
                                            <arg value="dmg"/>
                                            <arg value="--name"/>
                                            <arg value="Family Tree Editor"/>
                                            <arg value="--app-version"/>
                                            <arg value="${app.version.effective}"/>
                                            <arg value="--vendor"/>
                                            <arg value="FamilyTree"/>
                                            <arg value="--dest"/>
                                            <arg value="${project.build.directory}/dist"/>
                                            <arg value="--input"/>
                                            <arg value="${project.build.directory}/jpackage/input"/>
                                            <arg value="--main-jar"/>
                                            <arg value="${project.build.finalName}.jar"/>
                                            <arg value="--main-class"/>
                                            <arg value="com.pedigree.app.MainApplication"/>
                                            <arg value="--module-path"/>
                                            <arg value="${project.build.directory}/jpackage/input"/>
                                            <arg value="--add-modules"/>
                                            <arg value="javafx.controls,javafx.swing"/>
                                            <arg value="--mac-package-identifier"/>
                                            <arg value="com.familytree.editor"/>
                                        </exec>
                                        <!-- Rename DMG to include OS name -->
                                        <move file="${project.build.directory}/dist/Family Tree Editor-${app.version.effective}.dmg"
                                              tofile="${project.build.directory}/dist/family-tree-editor-${app.version.effective}-macos-x64.dmg"
                                              failonerror="false"/>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>linux</id>
            <activation>
                <os>
                    <family>unix</family>
                    <name>Linux</name>
                </os>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-controls</artifactId>
                    <version>${javafx.version}</version>
                    <classifier>linux</classifier>
                </dependency>
                <dependency>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-graphics</artifactId>
                    <version>${javafx.version}</version>
                    <classifier>linux</classifier>
                </dependency>
                <dependency>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-base</artifactId>
                    <version>${javafx.version}</version>
                    <classifier>linux</classifier>
                </dependency>
                <dependency>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-swing</artifactId>
                    <version>${javafx.version}</version>
                    <classifier>linux</classifier>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>3.6.1</version>
                        <executions>
                            <execution>
                                <id>copy-dependencies-for-jpackage-linux</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-dependencies</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/jpackage/input</outputDirectory>
                                    <includeScope>runtime</includeScope>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-main-jar-for-jpackage-linux</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>${project.groupId}</groupId>
                                            <artifactId>${project.artifactId}</artifactId>
                                            <version>${project.version}</version>
                                            <outputDirectory>${project.build.directory}/jpackage/input</outputDirectory>
                                            <destFileName>${project.build.finalName}.jar</destFileName>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>


                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>prepare-dist-dir-linux</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <mkdir dir="${project.build.directory}/dist"/>
                                        <mkdir dir="${project.build.directory}/jpackage/input"/>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>package-linux-portable</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <delete dir="${project.build.directory}/portable-linux" failonerror="false"/>
                                        <mkdir dir="${project.build.directory}/portable-linux/lib"/>
                                        <!-- Copy all runtime jars -->
                                        <copy todir="${project.build.directory}/portable-linux/lib" flatten="true">
                                            <fileset dir="${project.build.directory}/jpackage/input">
                                                <include name="*.jar"/>
                                            </fileset>
                                        </copy>
                                        <!-- Create launcher script -->
                                        <echo file="${project.build.directory}/portable-linux/run.sh"><![CDATA[#!/usr/bin/env bash
DIR="$(cd "$(dirname "$0")" >/dev/null && pwd)"
JAVA_CMD="java"
MP="$DIR/lib"
$JAVA_CMD --module-path "$MP" --add-modules javafx.controls,javafx.swing -cp "$DIR/lib/*" com.pedigree.app.MainApplication "$@"
]]></echo>
                                        <chmod file="${project.build.directory}/portable-linux/run.sh" perm="755"/>
                                        <!-- Create archives into dist (tar.gz and zip) -->
                                        <tar destfile="${project.build.directory}/dist/family-tree-editor-${app.version.effective}-linux-portable.tar.gz" compression="gzip">
                                            <tarfileset dir="${project.build.directory}/portable-linux" prefix="family-tree-editor"/>
                                        </tar>
                                        <zip destfile="${project.build.directory}/dist/family-tree-editor-${app.version.effective}-linux-portable.zip">
                                            <fileset dir="${project.build.directory}/portable-linux"/>
                                        </zip>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>windows</id>
            <activation>
                <os>
                    <family>windows</family>
                </os>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-controls</artifactId>
                    <version>${javafx.version}</version>
                    <classifier>win</classifier>
                </dependency>
                <dependency>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-graphics</artifactId>
                    <version>${javafx.version}</version>
                    <classifier>win</classifier>
                </dependency>
                <dependency>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-base</artifactId>
                    <version>${javafx.version}</version>
                    <classifier>win</classifier>
                </dependency>
                <dependency>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-swing</artifactId>
                    <version>${javafx.version}</version>
                    <classifier>win</classifier>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <!-- Собираем зависимости и основной JAR для jpackage -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>3.6.1</version>
                        <executions>
                            <execution>
                                <id>copy-dependencies-for-jpackage-win</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-dependencies</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/jpackage/input</outputDirectory>
                                    <includeScope>runtime</includeScope>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-main-jar-for-jpackage-win</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>${project.groupId}</groupId>
                                            <artifactId>${project.artifactId}</artifactId>
                                            <version>${project.version}</version>
                                            <outputDirectory>${project.build.directory}/jpackage/input</outputDirectory>
                                            <destFileName>${project.build.finalName}.jar</destFileName>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>


                    <!-- Готовим каталоги -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>prepare-dist-dir-win</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <mkdir dir="${project.build.directory}/dist"/>
                                        <mkdir dir="${project.build.directory}/jpackage/input"/>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Вызываем jpackage для сборки MSI -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>package-windows-msi</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <exec executable="jpackage">
                                            <arg value="--type"/>
                                            <arg value="msi"/>
                                            <arg value="--name"/>
                                            <arg value="Family Tree Editor"/>
                                            <arg value="--app-version"/>
                                            <arg value="${app.version.effective}"/>
                                            <arg value="--vendor"/>
                                            <arg value="FamilyTree"/>
                                            <arg value="--dest"/>
                                            <arg value="${project.build.directory}/dist"/>
                                            <arg value="--input"/>
                                            <arg value="${project.build.directory}/jpackage/input"/>
                                            <arg value="--main-jar"/>
                                            <arg value="${project.build.finalName}.jar"/>
                                            <arg value="--main-class"/>
                                            <arg value="com.pedigree.app.MainApplication"/>
                                            <arg value="--module-path"/>
                                            <arg value="${project.build.directory}/jpackage/input"/>
                                            <arg value="--add-modules"/>
                                            <arg value="javafx.controls,javafx.swing"/>
                                            <arg value="--win-menu"/>
                                            <arg value="--win-menu-group"/>
                                            <arg value="FamilyTree"/>
                                            <arg value="--win-dir-chooser"/>
                                            <arg value="--win-shortcut"/>
                                        </exec>
                                        <!-- Rename MSI to include OS name -->
                                        <move file="${project.build.directory}/dist/Family Tree Editor-${app.version.effective}.msi"
                                              tofile="${project.build.directory}/dist/family-tree-editor-${app.version.effective}-windows.msi"
                                              failonerror="false"/>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>


