name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build_macos:
    name: Build macOS (DMG)
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Temurin JDK 25
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '25'
          cache: 'maven'

      - name: Build (mac profile)
        run: mvn -B -Pmac -DskipTests clean package

      - name: Upload DMG artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-dmg
          path: |
            target/dist/*.dmg
          if-no-files-found: error

  build_windows:
    name: Build Windows (MSI)
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Temurin JDK 25
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '25'
          cache: 'maven'

      - name: Build (windows profile)
        run: mvn -B -Pwindows -DskipTests clean package
        shell: bash

      - name: Upload MSI artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-msi
          path: |
            target/dist/*.msi
          if-no-files-found: error

  build_linux:
    name: Build Linux (DEB)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Temurin JDK 25
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '25'
          cache: 'maven'

      - name: Install packaging tools
        run: sudo apt-get update && sudo apt-get install -y fakeroot binutils

      - name: Build (linux profile)
        run: mvn -B -Plinux -DskipTests clean package

      - name: Upload DEB artifact (optional)
        uses: actions/upload-artifact@v4
        with:
          name: linux-deb
          path: |
            target/dist/*.deb
          if-no-files-found: warn

  create_release:
    name: Create GitHub Release
    needs: [build_macos, build_windows, build_linux]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Download all available build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: '*'
          merge-multiple: true

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
