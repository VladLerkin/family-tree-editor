name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-macos:
    name: Build macOS (DMG)
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Temurin JDK 25
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '25'
          cache: 'maven'
      - name: Build DMG
        run: mvn -B -V -e -Pmac clean package
      - name: Upload DMG artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-dmg
          path: target/dist/*.dmg
          if-no-files-found: error

  build-windows:
    name: Build Windows (MSI)
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Temurin JDK 25
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '25'
          cache: 'maven'
      - name: Build MSI
        run: mvn -B -V -e -Pwindows clean package
      - name: Upload MSI artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-msi
          path: target/dist/*.msi
          if-no-files-found: error

  build-linux:
    name: Build Linux (DEB)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Temurin JDK 25
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '25'
          cache: 'maven'
      - name: Install packaging prerequisites (fakeroot, binutils, desktop-file-utils)
        run: |
          sudo apt-get update
          sudo apt-get install -y fakeroot binutils desktop-file-utils
      - name: Build DEB
        run: mvn -B -V -e -Plinux clean package
      - name: Upload DEB artifact (required)
        uses: actions/upload-artifact@v4
        with:
          name: linux-deb
          path: target/dist/*.deb
          if-no-files-found: error

  release:
    name: Create GitHub Release
    needs:
      - build-macos
      - build-windows
      - build-linux
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: macos-dmg
          path: macos-dmg
      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-msi
          path: windows-msi
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-deb
          path: linux-deb
      - name: Create Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            macos-dmg/**
            windows-msi/**
            linux-deb/**
          draft: false
          prerelease: false
          generate_release_notes: true
