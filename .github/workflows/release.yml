name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 25
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '25'
          cache: 'maven'

      - name: Build macOS DMG
        run: mvn -Pmac clean package

      - name: List build artifacts
        run: ls -lh target/dist/

      - name: Upload macOS DMG
        uses: actions/upload-artifact@v4
        with:
          name: macos-dmg
          path: target/dist/*.dmg
          if-no-files-found: error

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 25
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '25'
          cache: 'maven'

      - name: Build Windows MSI
        run: mvn -Pwindows clean package

      - name: List build artifacts
        run: dir target\dist\

      - name: Upload Windows MSI
        uses: actions/upload-artifact@v4
        with:
          name: windows-msi
          path: target/dist/*.msi
          if-no-files-found: error

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 25
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '25'
          cache: 'maven'

      - name: Install Linux packaging tools
        run: |
          sudo apt-get update
          sudo apt-get install -y fakeroot binutils

      - name: Build Linux DEB
        run: mvn -Plinux clean package

      - name: List build artifacts
        run: ls -lh target/dist/

      - name: Upload Linux DEB
        uses: actions/upload-artifact@v4
        with:
          name: linux-deb
          path: target/dist/*.deb
          if-no-files-found: warn

  create-release:
    needs: [build-macos, build-windows, build-linux]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List downloaded artifacts
        run: |
          echo "=== Downloaded artifacts ==="
          find artifacts -type f

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/macos-dmg/*.dmg
            artifacts/windows-msi/*.msi
            artifacts/linux-deb/*.deb
          draft: false
          prerelease: false
          generate_release_notes: true
